name: 'Build and Deploy to Cloud Run'
on:
  push:
    branches:
      - production
env:
  PROJECT_ID: 'buddha-rag-prod'
  REGION: 'asia-southeast1'
  SERVICE: 'buddha-rag-prod'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/538009146790/locations/global/workloadIdentityPools/githubpool/providers/github-action-build-backend'
  SERVICE_ACCOUNT: 'github-action@buddha-rag-prod.iam.gserviceaccount.com'
jobs:
  checkout:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.extract_sha.outputs.sha }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Extract Commit SHA'
        id: extract_sha
        run: echo "sha=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"
  auth-and-build:
    needs: checkout
    runs-on: ubuntu-latest
    outputs:
      docker_tag: ${{ steps.build.outputs.docker_tag }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: 'Debug GitHub Context'
        run: |
          echo '${{secrets.SERVICE_ACCOUNT_JSON_CREDENTIALS}}'
      - name: 'Checkout'
        uses: actions/checkout@v4
      - id: auth
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{env.SERVICE_ACCOUNT}}'
          token_format: access_token
          # credentials_json: '${{secrets.SERVICE_ACCOUNT_JSON_CREDENTIALS}}'
      - name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Verify config location
        run: |
          export DOCKER_CONFIG=/home/runner/.docker
          echo "Docker config: $DOCKER_CONFIG"
          ls -la $DOCKER_CONFIG
          cat $DOCKER_CONFIG/config.json
      - name: Debug Docker auth
        run: |
            echo "=== Docker Info ==="
            docker info
            echo "=== Config Location ==="
            echo "DOCKER_CONFIG: ${DOCKER_CONFIG:-~/.docker}"
            echo "=== Config Contents ==="
            cat ~/.docker/config.json 2>/dev/null || echo "No config file"
            echo "=== Test Auth ==="
            docker pull hello-world || echo "Pull failed"
      - name: 'Build and Push Container'
        id: build
        run: |
          DOCKER_IMAGE='gcr.io/${{ env.PROJECT_ID }}/buddha-rag-agent:latest'
          docker build --platform linux/amd64 -t 'gcr.io/${{ env.PROJECT_ID }}/buddha-rag-agent:latest' ./container
          docker push 'gcr.io/${{ env.PROJECT_ID }}/buddha-rag-agent:latest'
          echo "docker_image=$DOCKER_IMAGE" >> "$GITHUB_OUTPUT"
        # DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ needs.checkout.outputs.sha }}"
        # docker build --tag "$DOCKER_TAG" ./container
        # docker push "$DOCKER_TAG"
        # echo "docker_tag=$DOCKER_TAG" >> "$GITHUB_OUTPUT"
        # sudo gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin 'https://${{ env.REGION }}-docker.pkg.dev'
  deploy:
    needs: auth-and-build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - id: auth
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{env.SERVICE_ACCOUNT}}'
      - name: 'Deploy to Cloud Run'
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ needs.auth-and-build.outputs.docker_image }}'
      - name: 'Show output'
        run: echo "Deployed to ${{ steps.deploy.outputs.url }}"
