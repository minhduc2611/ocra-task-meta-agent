# This workflow build and push a Docker container to Google Artifact Registry
# and deploy it on Cloud Run when a commit is pushed to the "main"
# branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Cloud Run (run.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Cloud Run Developer (roles/run.developer)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources
#
# 3. Change the values in the "env" block to match your values.

name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - production

env:
  PROJECT_ID: 'buddha-rag-prod'
  REGION: 'asia-southeast1'
  SERVICE: 'buddha-rag-prod'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/538009146790/locations/global/workloadIdentityPools/githubpool/providers/github-action-build-backend'
  SERVICE_ACCOUNT: 'github-action@buddha-rag-prod.iam.gserviceaccount.com'


jobs:
  checkout:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.extract_sha.outputs.sha }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Extract Commit SHA'
        id: extract_sha
        run: echo "sha=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"

  auth-and-build:
    needs: checkout
    runs-on: ubuntu-latest
    outputs:
      docker_tag: ${{ steps.build.outputs.docker_tag }}
    permissions:
      contents: read
      id-token: write

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - id: auth
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{SERVICE_ACCOUNT}}'

      - name: 'Docker Auth'
        uses: docker/login-action@v3
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.auth_token }}'
          registry: '${{ env.REGION }}-docker.pkg.dev'

      - name: 'Build and Push Container'
        id: build
        run: |
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ needs.checkout.outputs.sha }}"
          docker build --tag "$DOCKER_TAG" ./container
          docker push "$DOCKER_TAG"
          echo "docker_tag=$DOCKER_TAG" >> "$GITHUB_OUTPUT"

  deploy:
    needs: auth-and-build
    runs-on: ubuntu-latest

    steps:
      - name: 'Deploy to Cloud Run'
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ needs.auth-and-build.outputs.docker_tag }}'

      - name: 'Show output'
        run: echo "Deployed to ${{ steps.deploy.outputs.url }}"

