name: 'Build and Deploy to Cloud Run'
on:
  push:
    branches:
      - production
env:
  PROJECT_ID: 'buddha-rag-prod'
  REGION: 'asia-southeast1'
  SERVICE: 'buddha-rag-prod'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/538009146790/locations/global/workloadIdentityPools/githubpool/providers/github-action-build-backend'
  SERVICE_ACCOUNT: 'github-action@buddha-rag-prod.iam.gserviceaccount.com'
jobs:
  checkout:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.extract_sha.outputs.sha }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Extract Commit SHA'
        id: extract_sha
        run: echo "sha=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"
  auth-and-build:
    needs: checkout
    runs-on: ubuntu-latest
    outputs:
      docker_tag: ${{ steps.build.outputs.docker_tag }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - id: auth
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{env.SERVICE_ACCOUNT}}'
      - name: 'Configure Docker for Artifact Registry'
        run: |
          echo '${{ steps.auth.outputs.auth_token }}' | docker login -u oauth2accesstoken --password-stdin ${{ env.REGION }}-docker.pkg.dev
      - name: Debug Token Identity
        run: |
          # Check what identity the token represents
          TOKEN="${{ steps.auth.outputs.auth_token }}"
          curl -H "Authorization: Bearer $TOKEN" https://www.googleapis.com/oauth2/v1/tokeninfo
          
          # Also check with gcloud using the token
          echo "$TOKEN" | gcloud auth activate-service-account --key-file=- || echo "Token activation failed"
          gcloud auth list
      - name: 'Build and Push Container'
        id: build
        run: |
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ needs.checkout.outputs.sha }}"
          docker build --tag "$DOCKER_TAG" ./container
          docker push "$DOCKER_TAG"
          echo "docker_tag=$DOCKER_TAG" >> "$GITHUB_OUTPUT"
  deploy:
    needs: auth-and-build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - id: auth
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{env.SERVICE_ACCOUNT}}'
      - name: 'Deploy to Cloud Run'
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ needs.auth-and-build.outputs.docker_tag }}'
      - name: 'Show output'
        run: echo "Deployed to ${{ steps.deploy.outputs.url }}"
